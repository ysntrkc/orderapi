export default {
	Auth: {
		userNotFound: 'User not found',
		loginSuccess: 'Login successful',
		usernameAlreadyExists: 'Username already exists',
		emailAlreadyExists: 'Email already exists',
		registerSuccess: 'Register successful',
		logoutSuccess: 'Logout successful',
	},
	Cart: {
		insufficientStock: 'Product not found or insufficient stock',
		productAdded: 'Product added to cart successfully',
		notFound: 'Cart not found',
		retrieved: 'Cart retrieved successfully',
	},
	Order: {
		createSuccess: 'Order created successfully',
		getSuccess: 'Order retrieved successfully',
		notFound: 'Order not found',
		updateSuccess: 'Order status updated successfully',
	},
	Permission: {
		createSuccess: 'Permission created successfully',
		getSuccess: 'Permission retrieved successfully',
	},
	Product: {
		createSuccess: 'Product created successfully',
		getSuccess: 'Product retrieved successfully',
		notFound: 'Product not found',
		updateSuccess: 'Product updated successfully',
		deleteSuccess: 'Product deleted successfully',
		alredyExists: 'Product already exists',
	},
	Role: {
		getSuccess: 'Role retrieved successfully',
	},
	RolesPermission: {
		notFound: 'Role or permission not found',
		alredyExists: 'Role permission already exists',
		assignSuccess: 'Role permission asign successfully',
	},
	User: {
		getSuccess: 'User retrieved successfully',
		notFound: 'User not found',
		updateSuccess: 'User updated successfully',
		deleteSuccess: 'User deleted successfully',
		assignRoleError: 'System admin role cannot be assigned',
		roleOrUserNotFound: 'Role or user not found',
		roleAlreadyAssigned: 'Role already assigned to user',
		assignRoleSuccess: 'Role assigned successfully',
	},
	Joi: {
		'any.required': '{{#label}} is required',
		'array.base': '{{#label}} must be a array',
		'array.length': '{{#label}} must contain {{#limit}} items',
		'array.max': '{{#label}} must contain less than or equal to {{#limit}} items',
		'array.min': '{{#label}} must contain at least {{#limit}} items',
		'boolean.base': '{{#label}} must be a boolean',
		'date.base': '{{#label}} must be a date',
		'number.base': '{{#label}} must be a number',
		'number.integer': '{{#label}} must be an integer',
		'number.max': '{{#label}} must be less than or equal to {{#limit}}',
		'number.min': '{{#label}} must be larger than or equal to {{#limit}}',
		'number.negative': '{{#label}} must be a negative',
		'number.positive': '{{#label}} must be a positive',
		'number.greater': '{{#label}} cannot be greater than {{#root}}',
		'object.base': '{{#label}} must be a object',
		'object.unknown': '{{#label}} is not allowed',
		'string.alphanum': '{{#label}} must only contain alpha-numeric characters',
		'string.base': '{{#label}} must be a string',
		'string.base64': '{{#label}} must be a valid base64 string',
		'string.creditCard': '{{#label}} must be a credit card',
		'string.dataUri': '{{#label}} must be a valid dataUri string',
		'string.domain': '{{#label}} must contain a valid domain name',
		'string.email': '{{#label}} must be a valid email',
		'string.empty': '{{#label}} is not allowed to be empty',
		'string.guid': '{{#label}} must be a valid GUID',
		'string.hex': '{{#label}} must only contain hexadecimal characters',
		'string.hexAlign': '{{#label}} hex decoded representation must be byte aligned',
		'string.hostname': '{{#label}} must be a valid hostname',
		'string.ip': '{{#label}} must be a valid ip address',
		'string.isoDate': '{{#label}} must be in iso format',
		'string.isoDuration': '{{#label}} must be a valid ISO 8601 duration',
		'string.length': '{{#label}} length must be {{#limit}} characters long',
		'string.lowercase': '{{#label}} must only contain lowercase characters',
		'string.max': '{{#label}} length must be less than or equal to {{#limit}} characters long',
		'string.min': '{{#label}} length must be at least {{#limit}} characters long',
		'string.normalize': '{{#label}} must be unicode normalized in the {{#form}} form',
		'string.token': '{{#label}} must only contain alpha-numeric and underscore characters',
		'string.pattern.base': '{{#label}} with value {:[.]} fails to match the required pattern: {{#regex}}',
		'string.trim': '{{#label}} must not have leading or trailing whitespace',
		'string.uri': '{{#label}} must be a valid uri',
		'string.uriRelativeOnly': '{{#label}} must be a valid relative uri',
		'string.uppercase': '{{#label}} must only contain uppercase characters',
		password: 'Password must contain at least 8 characters, one uppercase letter, one lowercase letter, one number and one special character'
	}
};